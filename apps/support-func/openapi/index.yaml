openapi: 3.0.1
info:
  title: IO Functions CGN Support
  description: |
    Documentation of the IO Function API here.
  contact:
    name: IO team
    url: https://forum.italia.it/c/progetto-io
  version: 1.0.0
  x-logo:
    url: https://io.italia.it/assets/img/io-logo-blue.svg
servers:
  - url: https://api.cd.italia.it/api/v1/cgn-support
security:
  - ApiKey: []
paths:
  /user-info:
    post:
      summary: Get user informations about CGN
      description: "Retrieves useful informations about the user with regards to CGN"
      operationId: getCgnUserInfo
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FiscalCodePayload"
      responses:
        "200":
          description: CGN details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "400":
          description: Bad Request, maybe body payload is not valid.
          content: {}
        "401":
          description: Wrong or missing function key.
          content: {}
        "404":
          description: No CGN found.
          content: {}
        "500":
          description: Service unavailable.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"             
components:
  schemas:
    FiscalCodePayload:
      type: object
      properties:
        fiscal_code:
          $ref: '#/components/schemas/FiscalCode'
      required:
        - fiscal_code
      example: | 
        {
          "fiscal_code": "AAABBB00C00D000E"
        }
    FiscalCode:
      type: string
      description: User's fiscal code.
      format: FiscalCode
      x-import: '@pagopa/ts-commons/lib/strings'
      example: AAABBB00C00D000E
    Timestamp:
      type: string
      description: A date-time field in ISO-8601 format and UTC timezone.
      format: UTCISODateFromString
      example: 2018-10-13T00:00:00.000Z
      x-import: "@pagopa/ts-commons/lib/dates"
    UserInfo:
      required:
        - cgn_card
      type: object
      properties:
        cgn_card:
          $ref: "#/components/schemas/Card"
        eyca_card:
          $ref: "#/components/schemas/EycaCard"
    CommonCard:
      type: object
      properties:
        activation_date:
          $ref: "#/components/schemas/Timestamp"
        expiration_date:
          $ref: "#/components/schemas/Timestamp"
      required:
        - activation_date
        - expiration_date
    CardPending:
      type: object
      properties:
        status:
          type: string
          x-extensible-enum:
            - PENDING
      required:
        - status
    CardActivated:
      allOf:
        - $ref: "#/components/schemas/CommonCard"
        - type: object
          properties:
            status:
              type: string
              x-extensible-enum:
                - ACTIVATED
          required:
            - status
    CardRevoked:
      allOf:
        - $ref: "#/components/schemas/CommonCard"
        - type: object
          properties:
            status:
              type: string
              x-extensible-enum:
                - REVOKED
            revocation_date:
              $ref: "#/components/schemas/Timestamp"
            revocation_reason:
              type: string
              minLength: 1
          required:
            - status
            - revocation_date
            - revocation_reason
    CardExpired:
      allOf:
        - $ref: "#/components/schemas/CommonCard"
        - type: object
          properties:
            status:
              type: string
              x-extensible-enum:
                - EXPIRED
          required:
            - status
    CardPendingDelete:
      allOf:
        - $ref: "#/components/schemas/CommonCard"
        - type: object
          properties:
            status:
              type: string
              x-extensible-enum:
                - PENDING_DELETE
          required:
            - status
    Card:
      x-one-of: true
      allOf:
        - $ref: "#/components/schemas/CardPending"
        - $ref: "#/components/schemas/CardPendingDelete"
        - $ref: "#/components/schemas/CardActivated"
        - $ref: "#/components/schemas/CardRevoked"
        - $ref: "#/components/schemas/CardExpired"
      x-example: 
        status: ACTIVATED
        activation_date: "2021-10-13T00:00:00.000Z"
        expiration_date: "2030-10-13T00:00:00.000Z"
    CcdbNumber:
      type: string
      description: The internal CCDB Card number
      pattern: "^[A-Z][0-9]{3}-[A-Z][0-9]{3}-[A-Z][0-9]{3}-[A-Z][0-9]{3}$"
      minLength: 1
    EycaCardActivated:
      allOf:
        - $ref: "#/components/schemas/CardActivated"
        - type: object
          properties:
            card_number:
              $ref: "#/components/schemas/CcdbNumber"
          required:
            - card_number
    EycaCardExpired:
      allOf:
        - $ref: "#/components/schemas/CardExpired"
        - type: object
          properties:
            card_number:
              $ref: "#/components/schemas/CcdbNumber"
          required:
            - card_number
    EycaCardRevoked:
      allOf:
        - $ref: "#/components/schemas/CardRevoked"
        - type: object
          properties:
            card_number:
              $ref: "#/components/schemas/CcdbNumber"
          required:
            - card_number
    EycaCardPendingDelete:
      allOf:
        - $ref: "#/components/schemas/CardPendingDelete"
        - type: object
          properties:
            card_number:
              $ref: "#/components/schemas/CcdbNumber"
          required:
            - card_number
    EycaCard:
      x-one-of: true
      allOf:
        - $ref: "#/components/schemas/CardPending"
        - $ref: "#/components/schemas/EycaCardPendingDelete"
        - $ref: "#/components/schemas/EycaCardActivated"
        - $ref: "#/components/schemas/EycaCardRevoked"
        - $ref: "#/components/schemas/EycaCardExpired"
      x-example: 
        status: ACTIVATED
        activation_date: "2021-10-13T00:00:00.000Z"
        expiration_date: "2030-10-13T00:00:00.000Z"
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          format: uri
          example: https://example.com/problem/constraint-violation
          default: about:blank
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          $ref: "#/components/schemas/HttpStatusCode"
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
    HttpStatusCode:
      maximum: 600
      exclusiveMaximum: true
      minimum: 100
      type: integer
      description: |-
        The HTTP status code generated by the origin server for this occurrence
        of the problem.
      format: int32
      example: 200
  securitySchemes:
    ApiKey:
      type: apiKey
      description: The API key to access this function app.
      name: X-Functions-Key
      in: header
