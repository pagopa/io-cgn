on:
  workflow_call:
    inputs:
      app_folder:
        description: The folder of the java app.
        type: string
        required: true
      environment:
        description: Environment where the artifact will be deployed.
        type: string
        required: true
      resource_group_name:
        description: Web App resource group name.
        type: string
        required: true
      web_app_name:
        description: Web App name.
        type: string
        required: true
      use_staging_slot:
        description: True if artifact should be deployed to staging slot
        type: boolean
        required: false
        default: true
      use_private_agent:
        description: Use a private agent to deploy the built artifact.
        type: boolean
        required: false
        default: true
      use_labels:
        description: Use labels to start the right environment's GitHub runner. If use_labels is true, also use_private_agent must be set to true
        type: boolean
        required: false
        default: false
      revision:
        description: The revision to deploy
        type: string
        required: false
        default: "master"
      release_type:
        type: string
        description: The type of release to build
        required: false
        default: patch

concurrency:
  group: ${{ github.workflow }}-cd
  cancel-in-progress: true

env:
  REVISION: ${{inputs.revision}}
  BUNDLE_NAME: bundle-${{inputs.environment}}

jobs:
  make_release:
    name: Make Release
    if: ${{ inputs.environment == 'prod' && inputs.revision == 'master' && !github.event.act }}
    runs-on: 'ubuntu-latest'
    environment: pe-app-${{ inputs.environment }}-cd
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout

      - name: Set up Maven Central Repository
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Init submodules
        id: init-submodule
        run: |
          git submodule update --init --recursive
        working-directory: .

      - name: Make release
        id: make-release
        env:
          GH_TOKEN: ${{ secrets.CGN_GH_BOT_PAT }}
        run: |
          git checkout $REVISION
          mvn validate versions:set -P increment-${{inputs.release_type}}
          git status
          echo "Remote url $(git config --get remote.origin.url)"
          git config --global user.name "cgn-pagopa-bot"
          git config --global user.email "cgn-pagopa-github-bot@pagopa.it"
          git remote set-url origin https://cgn-pagopa-bot:${{ secrets.CGN_GH_BOT_PAT }}@github.com/pagopa/${{inputs.app_folder}}
          export VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Making release on parent repo..."
          echo "Release version: $VERSION"
          echo "-> Branching..." && git checkout -b release-$VERSION && echo "done."
          echo "-> Tagging..." && git tag -a v$VERSION -m "Version $VERSION" && echo "done."
          echo "-> Adding..." && git add . && echo "done."
          echo "-> Committing..." && git commit -m "Bumped Version" && echo "done."
          echo "-> Pushing..." && git push --set-upstream origin release-$VERSION && echo "done."
          echo "-> Pushing tag..." && git push origin tag v$VERSION && echo "done."
          echo "Release on parent repo completed."
          echo "Making Pull Request..." && gh pr create --base master --head release-$VERSION --title "Bumped package version" --body "Package version has been bumped after a new release on production." && echo "done."
          echo "Making Release..." && gh release create $VERSION-RELEASE && echo "done."
        working-directory: ./${{ inputs.app_folder }}