on:
  workflow_call:
    inputs:
      app_folder:
        description: The folder of the java app.
        type: string
        required: true
      environment:
        description: Environment where the artifact will be deployed.
        type: string
        required: true
      resource_group_name:
        description: Web App resource group name.
        type: string
        required: true
      web_app_name:
        description: Web App name.
        type: string
        required: true
      use_staging_slot:
        description: True if artifact should be deployed to staging slot
        type: boolean
        required: false
        default: true
      use_private_agent:
        description: Use a private agent to deploy the built artifact.
        type: boolean
        required: false
        default: true
      use_labels:
        description: Use labels to start the right environment's GitHub runner. If use_labels is true, also use_private_agent must be set to true
        type: boolean
        required: false
        default: false
      revision:
        description: The revision to deploy
        type: string
        required: false
        default: "master"

concurrency:
  group: ${{ github.workflow }}-cd
  cancel-in-progress: true

env:
  REVISION: ${{inputs.revision}}
  BUNDLE_NAME: bundle-${{inputs.environment}}

jobs:
  build:
    name: Build Artifact
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        name: Checkout

      - name: Set up Maven Central Repository
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4
        with:
          java-version: '21'
          distribution: 'temurin'
      
      - name: Init submodules
        id: init-submodule
        run: |
          git submodule update --init --recursive
        working-directory: .

      - name: Build the artifact
        id: make-artifact
        run: |
          git checkout $REVISION
          mvn package -DskipTests
          cp $(find ./target -maxdepth 1 -name "*.jar") ./$BUNDLE_NAME.jar
          echo "artifact-path=$(realpath $BUNDLE_NAME.jar)" >> "$GITHUB_OUTPUT"
        working-directory: ./${{ inputs.app_folder }}

      - name: Upload Artifact
        uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6 # v4.2.0
        with:
          name: ${{ env.BUNDLE_NAME }}
          path: ${{ steps.make-artifact.outputs.artifact-path }}
          if-no-files-found: error
          retention-days: 7

  deploy:
    name: Deploy
    if: ${{ !github.event.act }}
    needs: [build]
    runs-on: ${{ inputs.use_labels && inputs.use_private_agent && inputs.environment || inputs.use_private_agent && 'self-hosted' || 'ubuntu-latest' }}    
    environment: pe-app-${{ inputs.environment }}-cd
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          name: ${{ env.BUNDLE_NAME }}

      - name: Azure Login
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302 # v2
        env:
          ARM_USE_OIDC: true
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Deploy
        if: ${{ inputs.use_staging_slot == false }}
        run: |
          az webapp deploy \
           --resource-group ${{ inputs.resource_group_name }} \
           --name ${{ inputs.web_app_name }} \
           --src-path ./${{ env.BUNDLE_NAME }}.jar \
           --type jar \
           --async false

      - name: Deploy to Staging Slot
        if: ${{ inputs.use_staging_slot == true }}
        run: |
          az webapp deploy \
           --resource-group ${{ inputs.resource_group_name }} \
           --name ${{ inputs.web_app_name }} \
           --slot staging \
           --src-path ./${{ env.BUNDLE_NAME }}.jar \
           --type jar \
           --async false

      - name: Swap Staging and Production Slots
        if: ${{ inputs.use_staging_slot == true }}
        run: |
          az webapp deployment slot swap \
            -g ${{ inputs.resource_group_name }} \
            -n ${{ inputs.web_app_name }} \
            --slot staging \
            --target-slot production
